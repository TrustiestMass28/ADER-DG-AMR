import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import linregress

def main_convergence():

    #===================================#
    N = np.array([8,16,32])
    p = 3
    L = 2
    #===================================#

    if L==1:       
        # Single level 
        p_E = { 1:[0.027160446752173044,0.011423722902617695, 0.0052233221492592264, 0.0032104541149294286],#pre-asymptotic
                3:[0.0014040860573684849,9.0893514353631476e-05,4.0117851422637728e-06,1.7954526308565961e-07]}
        # Multi level
        #p_E = {3:[]}

    elif L==2:   
        # Single level     
        #p_E = {1:[0.048870899515791516, 0.01753439920565603,0.0087262139910766756, 0.0057269497617791539],#pre-asymptotic
        #       2:[0.0087790966099986489, 0.0017085238936960308,0.00012726442764960074,1.5981709704366251e-05],
        #       3:[0.0027877884461944696,0.0001746922677643825,7.8290770603552511e-06,3.9752247868729303e-07]}
        # Multi level
        p_E = {3:[0.0020574654998603064,0.00028314561995897592,3.2632006533149857e-05]}
        
    slope, intercept, r_value, p_value, std_err = linregress(np.log10(N), np.log10(p_E[p]))
    print("EOC p"+str(p)+": "+str(abs(slope)))  
    print("TOC p"+str(p)+": "+str(p+1))  

if __name__ == "__main__":
    main_convergence()

